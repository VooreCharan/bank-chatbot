CREATE EXTENSION IF NOT EXISTS vector;

CREATE TABLE banking_memory (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL,
    question TEXT NOT NULL,
    answer TEXT NOT NULL,
    embedding VECTOR(768), -- Gemini embedding-001 outputs 768 dimensions
    timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

CREATE FUNCTION match_memories(
    query_embedding VECTOR(768),
    match_threshold FLOAT,
    match_count INT,
    user_id_filter TEXT
) RETURNS TABLE (
    id BIGINT,
    user_id TEXT,
    question TEXT,
    answer TEXT,
    similarity FLOAT
) AS $$
BEGIN
    RETURN QUERY
    SELECT
        bm.id,
        bm.user_id,
        bm.question,
        bm.answer,
        (1 - (bm.embedding <=> query_embedding)) AS similarity
    FROM banking_memory bm
    WHERE bm.user_id = user_id_filter
    AND (1 - (bm.embedding <=> query_embedding)) > match_threshold
    ORDER BY similarity DESC
    LIMIT match_count;
END;
$$ LANGUAGE plpgsql;